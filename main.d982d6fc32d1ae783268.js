(self.webpackChunkpessimistic_it_com=self.webpackChunkpessimistic_it_com||[]).push([[179],{7219:(e,t,n)=>{"use strict";n(9845),n(9612),n(1338),n(7300);var o=n(3935),r=n(7294),i=n(9163),a="#80822f",l="#fefff5",c="#343736";function m(){var e,t,n=(e=["\n* {\n  margin: 0;\n  padding: 0;\n}\n\na:link, a:active, a:visited{\n  color: inherit;\n}\n\nbody {\n  background: ",";\n  @media (prefers-color-scheme: dark) {\n    background:  ",";\n  }\n}\n\n\nhtml {\n  font-size: 16px;\n    @media (max-width: ","px) {\n      font-size: 12px;\n  }\n}\n"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return m=function(){return n},n}var s=(0,i.vJ)(m(),l,c,800),d=i.ZP.div.withConfig({displayName:"Center__Container",componentId:"sc-1nc88kr-0"})(["align-items:center;display:flex;flex-direction:column;width:100%;text-align:center;"]),p=function(e){return r.createElement(d,null,e.children)},u=i.ZP.div.withConfig({displayName:"Layout__FixedWidth",componentId:"sc-1tcp1xw-0"})(["width:100%;max-width:","px;min-width:280px;"],1200),h=function(e){var t=e.children;return r.createElement(p,null,r.createElement(u,null,t))},g=n(6418),f=i.ZP.header.withConfig({displayName:"Highlight",componentId:"dh20rb-0"})(["background-color:",";padding:1rem;margin:2rem;border-radius:1rem;"],(function(e){return e.color+"aa"})),w=function(e){return r.createElement(p,null,r.createElement(f,e,e.children))},b=i.ZP.div.withConfig({displayName:"SectionBackground",componentId:"gndo8k-0"})(["background-position:center;background-repeat:no-repeat;background-size:cover;display:flex;align-items:center;border-radius:2rem;"]),k="\n  font-family: ".concat("'Open Sans', 'Helvetica Neue', Arial, sans-serif",";\n  font-size: 1rem;\n"),x=i.ZP.div.withConfig({displayName:"Text",componentId:"sc-1esa486-0"})(["",""],k),y=(0,i.ZP)(x).withConfig({displayName:"Title__Heading",componentId:"sc-1xro7kt-0"})(["font-size:3rem;font-weight:bold;color:",";text-shadow:"," 0px 0px 2px;"],a,l),C=(0,i.ZP)(x).withConfig({displayName:"Title__Tagline",componentId:"sc-1xro7kt-1"})(["color:",";"],a),v=(0,i.ZP)(b).withConfig({displayName:"Title__FieldOfDreams",componentId:"sc-1xro7kt-2"})(["background-image:url(",");height:100vh;max-height:500px;min-height:300px;background-position:center;margin-bottom:2rem;border-radius:0 0 2rem 2rem;"],g),E=(0,i.ZP)(w).withConfig({displayName:"Title__TitleHolder",componentId:"sc-1xro7kt-3"})(["padding:4rem 2rem;"]),_=function(e){return r.createElement(r.Fragment,null,r.createElement(v,null,r.createElement(E,{color:l},r.createElement(y,null,"Pessimistic IT"),r.createElement(C,null,"Concentrate on what matters."))))},P=n(724),j=n.n(P),I=i.ZP.li.withConfig({displayName:"Bullet__ListItem",componentId:"sc-2ooj3c-0"})([""," color:",";"],k,(function(e){return e.color})),N=function(e){var t=e.markdown,n=e.textColor;return r.createElement(I,{color:n},r.createElement(j(),null,t))};function Z(){return(Z=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var T=i.ZP.ul.withConfig({displayName:"Bullets__List",componentId:"j5qss8-0"})(["text-align:start;padding-left:1em;"]),z=function(e){var t=e.bullets;return e.textColor,r.createElement(T,null,t.map((function(e,t){return r.createElement(N,Z({},e,{key:t}))})))},O=(0,i.ZP)(x).withConfig({displayName:"Practice__Heading",componentId:"sc-13ta0oe-0"})(["font-size:1.5rem;font-weight:bold;color:",";text-shadow:"," 0px 0px 2px;margin-bottom:0.25rem;margin-top:-0.25rem;"],(function(e){return e.textColor}),(function(e){return e.shadowColor})),F=(0,i.ZP)(b).withConfig({displayName:"Practice__Image",componentId:"sc-13ta0oe-1"})(["background-image:url(",");min-height:max(40vh,400px);@media (min-width:","px){min-width:400px;}flex:1 1 0;"],(function(e){return e.image}),800),B=function(e){var t=e.image,n=e.title,o=e.bullets,i=e.lightColor,a=e.darkColor;return r.createElement(F,{image:t},r.createElement(w,{color:i},r.createElement(O,{textColor:a,shadowColor:i},n),r.createElement(z,{textColor:a,bullets:o})))},H=n(8065),D=n(6903),L=n(6672),S=[{title:"Craftsmanship matters",image:n(1078),darkColor:"#750937",lightColor:"#e697e4",bullets:[{markdown:"[Extract till you drop](https://sites.google.com/site/unclebobconsultingllc/one-thing-extract-till-you-drop)"},{markdown:"[Prefer composition](https://en.wikipedia.org/wiki/Composition_over_inheritance)"},{markdown:"Focus on [naming](https://martinfowler.com/bliki/TwoHardThings.html)"},{markdown:"Follow [the boy scout rule](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882)"},{markdown:"[Elevate improvement of daily work over daily work itself](https://itrevolution.com/the-unicorn-project/)"}]},{title:"Topography matters",image:D,bullets:[{markdown:"Build teams around [*products*, not *features*](https://martinfowler.com/articles/products-over-projects.html)"},{markdown:"Keep [teams small](https://www.sciencedirect.com/science/article/abs/pii/S0749597812000374)"},{markdown:"Be mindful of [Conway's law](https://en.wikipedia.org/wiki/Conway%27s_law)"},{markdown:"Cross team dependencies should be well defined"},{markdown:"Focus begets flow, flow begets joy"}],darkColor:"#0f0e0e",lightColor:"#eee4cd"},{title:"Quality matters",image:H,darkColor:c,lightColor:"#e6c185",bullets:[{markdown:"[Keep development and production as similar as possible](https://12factor.net/dev-prod-parity)"},{markdown:"[Favor immutability](https://alvinalexander.com/scala/scala-idiom-immutable-code-functional-programming-immutability/)"},{markdown:"Practice BDD and TDD"},{markdown:"[Everything in one codebase](https://12factor.net/codebase)"}]},{title:"Culture matters",image:L,bullets:[{markdown:"Engender [psychological safety](https://rework.withgoogle.com/print/guides/5721312655835136/)"},{markdown:"Prefer [face-to-face conversations](https://agilemanifesto.org/principles.html)"},{markdown:"[Pair](https://martinfowler.com/articles/on-pair-programming.html) on everything"},{markdown:"Learn to [disagree and commit](https://www.aboutamazon.com/news/company-news/2016-letter-to-shareholders)"},{markdown:"[Embrace change](https://www.amazon.com/gp/product/0321278658)"}],darkColor:"#4e513c",lightColor:"#d8ba01"}],A=[{text:"Contact",url:'mailto:achristianson@example.com?body=In order to prove that you are a human, please change the email address to use the hostname "pessimistic-it.com".'},{text:"db2f5ab",url:"https://github.com/AndreasChristianson/pessimistic-it.com"}];function K(){return(K=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var q=i.ZP.div.withConfig({displayName:"Details__Container",componentId:"sc-12kd4ld-0"})(["display:flex;flex-direction:row;justify-content:space-evenly;flex-wrap:wrap;gap:2rem;@media (max-width:","px){flex-direction:column;}"],800),J=function(e){return r.createElement(q,null,S.map((function(e){return r.createElement(B,K({key:e.title},e))})))},Q=i.ZP.a.withConfig({displayName:"Link",componentId:"u1j9in-0"})(["",":link{}:visited{}:focus{}:hover{}:active{}"],k),W=(0,i.ZP)(b).withConfig({displayName:"Footer__Background",componentId:"sc-8db6yj-0"})(["background-image:url(",");background-position:bottom;margin-top:2rem;border-radius:2rem 2rem 0 0;justify-content:space-around;color:",";"],g,a),G=(0,i.ZP)(Q).withConfig({displayName:"Footer__FooterLink",componentId:"sc-8db6yj-1"})(["margin:1rem;"]),M=function(e){return r.createElement(W,null,A.map((function(e,t){var n=e.text,o=e.url;return r.createElement(G,{href:o,key:t},n)})))},R=function(e){return r.createElement(h,null,r.createElement(s,null),r.createElement(_,null),r.createElement(J,null),r.createElement(M,null))};o.render(r.createElement(R,null),document.getElementById("root"))},8065:(e,t,n)=>{"use strict";e.exports=n.p+"1f7a77d0b635a81231a7.jpeg"},6672:(e,t,n)=>{"use strict";e.exports=n.p+"26182ab370c5965c929c.jpeg"},1078:(e,t,n)=>{"use strict";e.exports=n.p+"4a5d5341874dc8047290.jpeg"},6903:(e,t,n)=>{"use strict";e.exports=n.p+"2f3eada9ec0b2bfa3ee2.jpeg"},6418:(e,t,n)=>{"use strict";e.exports=n.p+"94fb49ae74b21f1bffc1.jpeg"}},0,[[7219,666,216]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
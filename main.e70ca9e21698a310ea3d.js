"use strict";(self.webpackChunkpessimistic_it_com=self.webpackChunkpessimistic_it_com||[]).push([[792],{8674:(e,t,n)=>{n(2647),n(748);var o=n(5338),r=n(6540),a=n(7581),i="#80822f",l="#fefff5",c="#343736",m=(0,a.DU)(["*{margin:0;padding:0;}a:link,a:active,a:visited{color:inherit;}body{background:",";@media (prefers-color-scheme:dark){background:",";}}html{font-size:16px;@media (max-width:","px){font-size:12px;}}"],l,c,800),s=a.Ay.div.withConfig({displayName:"Center__Container",componentId:"sc-1nc88kr-0"})(["align-items:center;display:flex;flex-direction:column;width:100%;text-align:center;"]),d=function(e){return r.createElement(s,null,e.children)},p=a.Ay.div.withConfig({displayName:"Layout__FixedWidth",componentId:"sc-1tcp1xw-0"})(["width:100%;max-width:","px;min-width:280px;"],1200),u=function(e){var t=e.children;return r.createElement(d,null,r.createElement(p,null,t))};const g=n.p+"ad2dec57c48dba13f2cd.webp";var h=a.Ay.header.withConfig({displayName:"Highlight",componentId:"sc-dh20rb-0"})(["background-color:",";padding:1rem;margin:2rem;border-radius:1rem;"],(function(e){return e.color+"aa"})),f=function(e){return r.createElement(d,null,r.createElement(h,e,e.children))},w=a.Ay.div.withConfig({displayName:"SectionBackground",componentId:"sc-gndo8k-0"})(["background-position:center;background-repeat:no-repeat;background-size:cover;display:flex;align-items:center;border-radius:2rem;"]),y="\n  font-family: ".concat("'Open Sans', 'Helvetica Neue', Arial, sans-serif",";\n  font-size: 1rem;\n"),b=a.Ay.div.withConfig({displayName:"Text",componentId:"sc-1esa486-0"})(["",""],y),k=(0,a.Ay)(b).withConfig({displayName:"Title__Heading",componentId:"sc-1xro7kt-0"})(["font-size:3rem;font-weight:bold;color:",";text-shadow:"," 0px 0px 2px;"],i,l),x=(0,a.Ay)(b).withConfig({displayName:"Title__Tagline",componentId:"sc-1xro7kt-1"})(["color:",";"],i),C=(0,a.Ay)(w).withConfig({displayName:"Title__FieldOfDreams",componentId:"sc-1xro7kt-2"})(["background-image:url(",");height:100vh;max-height:500px;min-height:300px;background-position:center;margin-bottom:2rem;border-radius:0 0 2rem 2rem;"],g),v=(0,a.Ay)(f).withConfig({displayName:"Title__TitleHolder",componentId:"sc-1xro7kt-3"})(["padding:4rem 2rem;"]),E=function(e){return r.createElement(r.Fragment,null,r.createElement(C,null,r.createElement(v,{color:l},r.createElement(k,null,"Pessimistic IT"),r.createElement(x,null,"Concentrate on what matters."))))},_=n(8334),I=a.Ay.li.withConfig({displayName:"Bullet__ListItem",componentId:"sc-2ooj3c-0"})([""," color:",";"],y,(function(e){return e.color})),A=function(e){var t=e.markdown,n=e.textColor;return r.createElement(I,{color:n},r.createElement(_.oz,null,t))};function N(){return N=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)({}).hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},N.apply(null,arguments)}var j=a.Ay.ul.withConfig({displayName:"Bullets__List",componentId:"sc-j5qss8-0"})(["text-align:start;padding-left:1em;"]),T=function(e){var t=e.bullets;return e.textColor,r.createElement(j,null,t.map((function(e,t){return r.createElement(A,N({},e,{key:t}))})))},z=(0,a.Ay)(b).withConfig({displayName:"Practice__Heading",componentId:"sc-13ta0oe-0"})(["font-size:1.5rem;font-weight:bold;color:",";text-shadow:"," 0px 0px 2px;margin-bottom:0.25rem;margin-top:-0.25rem;"],(function(e){return e.textColor}),(function(e){return e.shadowColor})),F=(0,a.Ay)(w).withConfig({displayName:"Practice__Image",componentId:"sc-13ta0oe-1"})(["background-image:url(",");min-height:400px;@media (min-width:","px){min-width:400px;}flex:1 1 0;"],(function(e){return e.image}),800),O=function(e){var t=e.image,n=e.title,o=e.bullets,a=e.lightColor,i=e.darkColor;return r.createElement(F,{image:t},r.createElement(f,{color:a},r.createElement(z,{textColor:i,shadowColor:a},n),r.createElement(T,{textColor:i,bullets:o})))};const P=n.p+"da4a85330e377ff79ca5.webp",B=n.p+"219900b9f7159fd4758e.webp",D=n.p+"549758e450739ecb4726.webp";var H=[{title:"Craftsmanship matters",image:n.p+"98bfab2e0a49b3a455eb.webp",darkColor:"#750937",lightColor:"#e697e4",bullets:[{markdown:"[Extract till you drop](https://sites.google.com/site/unclebobconsultingllc/one-thing-extract-till-you-drop)"},{markdown:"[Prefer composition](https://en.wikipedia.org/wiki/Composition_over_inheritance)"},{markdown:"Focus on [naming](https://martinfowler.com/bliki/TwoHardThings.html)"},{markdown:"Follow [the boy scout rule](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882)"},{markdown:"[Elevate improvement of daily work over daily work itself](https://itrevolution.com/the-unicorn-project/)"}]},{title:"Topology matters",image:B,bullets:[{markdown:"Build teams around [*products*, not *features*](https://martinfowler.com/articles/products-over-projects.html)"},{markdown:"Keep [teams small](https://www.sciencedirect.com/science/article/abs/pii/S0749597812000374)"},{markdown:"Be mindful of [Conway's law](https://en.wikipedia.org/wiki/Conway%27s_law)"},{markdown:"Cross team dependencies should be well defined"},{markdown:"Focus begets flow, flow begets joy"}],darkColor:"#0f0e0e",lightColor:"#eee4cd"},{title:"Quality matters",image:P,darkColor:c,lightColor:"#e6c185",bullets:[{markdown:"[Keep development and production as similar as possible](https://12factor.net/dev-prod-parity)"},{markdown:"[Favor immutability](https://alvinalexander.com/scala/scala-idiom-immutable-code-functional-programming-immutability/)"},{markdown:"Practice BDD and TDD"},{markdown:"[Everything in one codebase](https://12factor.net/codebase)"}]},{title:"Culture matters",image:D,bullets:[{markdown:"Engender [psychological safety](https://rework.withgoogle.com/print/guides/5721312655835136/)"},{markdown:"Prefer [face-to-face conversations](https://agilemanifesto.org/principles.html)"},{markdown:"[Pair](https://martinfowler.com/articles/on-pair-programming.html) on everything"},{markdown:"Learn to [disagree and commit](https://www.aboutamazon.com/news/company-news/2016-letter-to-shareholders)"},{markdown:"[Embrace change](https://www.amazon.com/gp/product/0321278658)"}],darkColor:"#4e513c",lightColor:"#d8ba01"}],L=[{text:"Contact",url:'mailto:achristianson@example.com?body=In order to prove that you are a human, please change the email address to use the hostname "pessimistic-it.com".'},{text:"76aab10",url:"https://github.com/AndreasChristianson/pessimistic-it.com"}];function S(){return S=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)({}).hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},S.apply(null,arguments)}var K=a.Ay.main.withConfig({displayName:"Details__Container",componentId:"sc-12kd4ld-0"})(["display:flex;flex-direction:row;justify-content:space-evenly;flex-wrap:wrap;gap:2rem;@media (max-width:","px){flex-direction:column;}"],800),q=function(e){return r.createElement(K,null,H.map((function(e){return r.createElement(O,S({key:e.title},e))})))},Q=a.Ay.a.withConfig({displayName:"Link",componentId:"sc-u1j9in-0"})([""," :link{}:visited{}:focus{}:hover{}:active{}"],y),R=(0,a.Ay)(w).withConfig({displayName:"Footer__Background",componentId:"sc-8db6yj-0"})(["background-image:url(",");background-position:bottom;margin-top:2rem;border-radius:2rem 2rem 0 0;justify-content:space-around;color:",";"],g,i),U=(0,a.Ay)(Q).withConfig({displayName:"Footer__FooterLink",componentId:"sc-8db6yj-1"})(["margin:1rem;"]),W=function(e){return r.createElement(R,null,L.map((function(e,t){var n=e.text,o=e.url;return r.createElement(U,{href:o,key:t},n)})))},G=function(e){return r.createElement(u,null,r.createElement(m,null),r.createElement(E,null),r.createElement(q,null),r.createElement(W,null))};(0,o.createRoot)(document.getElementById("root")).render(r.createElement(G,null))}},e=>{e.O(0,[96],(()=>e(e.s=8674))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
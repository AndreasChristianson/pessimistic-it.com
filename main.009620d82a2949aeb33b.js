"use strict";(self.webpackChunkpessimistic_it_com=self.webpackChunkpessimistic_it_com||[]).push([[179],{8820:(e,t,o)=>{o(9612),o(7300);var n=o(3935),r=o(7294),a=o(9163),i="#80822f",l="#fefff5",c="#343736",m=(0,a.vJ)(["*{margin:0;padding:0;}a:link,a:active,a:visited{color:inherit;}body{background:",";@media (prefers-color-scheme:dark){background:",";}}html{font-size:16px;@media (max-width:","px){font-size:12px;}}"],l,c,800),s=a.ZP.div.withConfig({displayName:"Center__Container",componentId:"sc-1nc88kr-0"})(["align-items:center;display:flex;flex-direction:column;width:100%;text-align:center;"]),d=function(e){return r.createElement(s,null,e.children)},p=a.ZP.div.withConfig({displayName:"Layout__FixedWidth",componentId:"sc-1tcp1xw-0"})(["width:100%;max-width:","px;min-width:280px;"],1200),u=function(e){var t=e.children;return r.createElement(d,null,r.createElement(p,null,t))};const h=o.p+"ad2dec57c48dba13f2cd.webp";var g=a.ZP.header.withConfig({displayName:"Highlight",componentId:"sc-dh20rb-0"})(["background-color:",";padding:1rem;margin:2rem;border-radius:1rem;"],(function(e){return e.color+"aa"})),f=function(e){return r.createElement(d,null,r.createElement(g,e,e.children))},w=a.ZP.div.withConfig({displayName:"SectionBackground",componentId:"sc-gndo8k-0"})(["background-position:center;background-repeat:no-repeat;background-size:cover;display:flex;align-items:center;border-radius:2rem;"]),b="\n  font-family: ".concat("'Open Sans', 'Helvetica Neue', Arial, sans-serif",";\n  font-size: 1rem;\n"),k=a.ZP.div.withConfig({displayName:"Text",componentId:"sc-1esa486-0"})(["",""],b),y=(0,a.ZP)(k).withConfig({displayName:"Title__Heading",componentId:"sc-1xro7kt-0"})(["font-size:3rem;font-weight:bold;color:",";text-shadow:"," 0px 0px 2px;"],i,l),x=(0,a.ZP)(k).withConfig({displayName:"Title__Tagline",componentId:"sc-1xro7kt-1"})(["color:",";"],i),C=(0,a.ZP)(w).withConfig({displayName:"Title__FieldOfDreams",componentId:"sc-1xro7kt-2"})(["background-image:url(",");height:100vh;max-height:500px;min-height:300px;background-position:center;margin-bottom:2rem;border-radius:0 0 2rem 2rem;"],h),v=(0,a.ZP)(f).withConfig({displayName:"Title__TitleHolder",componentId:"sc-1xro7kt-3"})(["padding:4rem 2rem;"]),E=function(e){return r.createElement(r.Fragment,null,r.createElement(C,null,r.createElement(v,{color:l},r.createElement(y,null,"Pessimistic IT"),r.createElement(x,null,"Concentrate on what matters."))))},_=o(8053),P=a.ZP.li.withConfig({displayName:"Bullet__ListItem",componentId:"sc-2ooj3c-0"})([""," color:",";"],b,(function(e){return e.color})),I=function(e){var t=e.markdown,o=e.textColor;return r.createElement(P,{color:o},r.createElement(_.Z,null,t))};function N(){return N=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e},N.apply(this,arguments)}var Z=a.ZP.ul.withConfig({displayName:"Bullets__List",componentId:"sc-j5qss8-0"})(["text-align:start;padding-left:1em;"]),j=function(e){var t=e.bullets;return e.textColor,r.createElement(Z,null,t.map((function(e,t){return r.createElement(I,N({},e,{key:t}))})))},T=(0,a.ZP)(k).withConfig({displayName:"Practice__Heading",componentId:"sc-13ta0oe-0"})(["font-size:1.5rem;font-weight:bold;color:",";text-shadow:"," 0px 0px 2px;margin-bottom:0.25rem;margin-top:-0.25rem;"],(function(e){return e.textColor}),(function(e){return e.shadowColor})),F=(0,a.ZP)(w).withConfig({displayName:"Practice__Image",componentId:"sc-13ta0oe-1"})(["background-image:url(",");min-height:400px;@media (min-width:","px){min-width:400px;}flex:1 1 0;"],(function(e){return e.image}),800),O=function(e){var t=e.image,o=e.title,n=e.bullets,a=e.lightColor,i=e.darkColor;return r.createElement(F,{image:t},r.createElement(f,{color:a},r.createElement(T,{textColor:i,shadowColor:a},o),r.createElement(j,{textColor:i,bullets:n})))};const z=o.p+"da4a85330e377ff79ca5.webp",B=o.p+"219900b9f7159fd4758e.webp",H=o.p+"549758e450739ecb4726.webp";var D=[{title:"Craftsmanship matters",image:o.p+"98bfab2e0a49b3a455eb.webp",darkColor:"#750937",lightColor:"#e697e4",bullets:[{markdown:"[Extract till you drop](https://sites.google.com/site/unclebobconsultingllc/one-thing-extract-till-you-drop)"},{markdown:"[Prefer composition](https://en.wikipedia.org/wiki/Composition_over_inheritance)"},{markdown:"Focus on [naming](https://martinfowler.com/bliki/TwoHardThings.html)"},{markdown:"Follow [the boy scout rule](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882)"},{markdown:"[Elevate improvement of daily work over daily work itself](https://itrevolution.com/the-unicorn-project/)"}]},{title:"Topology matters",image:B,bullets:[{markdown:"Build teams around [*products*, not *features*](https://martinfowler.com/articles/products-over-projects.html)"},{markdown:"Keep [teams small](https://www.sciencedirect.com/science/article/abs/pii/S0749597812000374)"},{markdown:"Be mindful of [Conway's law](https://en.wikipedia.org/wiki/Conway%27s_law)"},{markdown:"Cross team dependencies should be well defined"},{markdown:"Focus begets flow, flow begets joy"}],darkColor:"#0f0e0e",lightColor:"#eee4cd"},{title:"Quality matters",image:z,darkColor:c,lightColor:"#e6c185",bullets:[{markdown:"[Keep development and production as similar as possible](https://12factor.net/dev-prod-parity)"},{markdown:"[Favor immutability](https://alvinalexander.com/scala/scala-idiom-immutable-code-functional-programming-immutability/)"},{markdown:"Practice BDD and TDD"},{markdown:"[Everything in one codebase](https://12factor.net/codebase)"}]},{title:"Culture matters",image:H,bullets:[{markdown:"Engender [psychological safety](https://rework.withgoogle.com/print/guides/5721312655835136/)"},{markdown:"Prefer [face-to-face conversations](https://agilemanifesto.org/principles.html)"},{markdown:"[Pair](https://martinfowler.com/articles/on-pair-programming.html) on everything"},{markdown:"Learn to [disagree and commit](https://www.aboutamazon.com/news/company-news/2016-letter-to-shareholders)"},{markdown:"[Embrace change](https://www.amazon.com/gp/product/0321278658)"}],darkColor:"#4e513c",lightColor:"#d8ba01"}],L=[{text:"Contact",url:'mailto:achristianson@example.com?body=In order to prove that you are a human, please change the email address to use the hostname "pessimistic-it.com".'},{text:"b888c3a",url:"https://github.com/AndreasChristianson/pessimistic-it.com"}];function S(){return S=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e},S.apply(this,arguments)}var A=a.ZP.main.withConfig({displayName:"Details__Container",componentId:"sc-12kd4ld-0"})(["display:flex;flex-direction:row;justify-content:space-evenly;flex-wrap:wrap;gap:2rem;@media (max-width:","px){flex-direction:column;}"],800),K=function(e){return r.createElement(A,null,D.map((function(e){return r.createElement(O,S({key:e.title},e))})))},q=a.ZP.a.withConfig({displayName:"Link",componentId:"sc-u1j9in-0"})(["",":link{}:visited{}:focus{}:hover{}:active{}"],b),J=(0,a.ZP)(w).withConfig({displayName:"Footer__Background",componentId:"sc-8db6yj-0"})(["background-image:url(",");background-position:bottom;margin-top:2rem;border-radius:2rem 2rem 0 0;justify-content:space-around;color:",";"],h,i),Q=(0,a.ZP)(q).withConfig({displayName:"Footer__FooterLink",componentId:"sc-8db6yj-1"})(["margin:1rem;"]),W=function(e){return r.createElement(J,null,L.map((function(e,t){var o=e.text,n=e.url;return r.createElement(Q,{href:n,key:t},o)})))},G=function(e){return r.createElement(u,null,r.createElement(m,null),r.createElement(E,null),r.createElement(K,null),r.createElement(W,null))};n.render(r.createElement(G,null),document.getElementById("root"))}},e=>{e.O(0,[216],(()=>(8820,e(e.s=8820)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,